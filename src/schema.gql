# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  id: Int!
  name: String!
  dateOfBirth: DateTime!
  nationality: String
  books: [Book!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Book {
  id: Int!
  title: String!
  author: Author
  translator: String
  edition: Int!
  publisher: String!
  language: Language!
  genre: Genre!
  createdAt: DateTime!
  updatedAt: DateTime!
  authorId: Int
}

enum Language {
  Persian
  English
  Arabic
}

enum Genre {
  Action
  Romance
  Comedy
  Adventure
  Horror
  Fantasy
  Historical
  Crime
}

type Profile {
  id: Int!
  firstname: String!
  lastname: String!
  phoneNumber: String!
  dateOfbirth: DateTime!
  user: User
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: Int!
  username: String!
  role: Roles!
  email: String!
  profile: Profile
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum Roles {
  Admin
  User
  Guest
}

type Query {
  "requirements :\n     query : \nquery FetchAllTheBooks{\n  books {\n    id\n    title\n    translator\n    edition\n    publisher\n    language\n    genre\n    author {\n      id\n      name\n    }\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  books(filter: BookFilterInput): [Book!]!

  "requirements :\n     query : \nquery FetchOneBookWithSpecifiedID{\n  book(id: 1) {\n    id\n    title\n    translator\n    edition\n    publisher\n    language\n    genre\n    author {\n      id\n      name\n    }\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  book(id: Int!): Book!

  "requirements :\n     query : \nquery SearchForBook{\n  findBookByTitle(title: \"The Great Adventure\") {\n    id\n    title\n    edition\n    publisher\n    author {\n      id\n      name\n    }\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  findBookByTitle(title: String!): Book!

  "requirements :\n     query : \nquery FetchAllTheAuthors{\n  authors {\n    id\n    name\n    dateOfBirth\n    nationality\n    books {\n      id\n      title\n      genre\n    }\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  authors: [Author!]!

  "requirements :\n     query : \nquery FetchAuthorWtihSpecifiedID{\n  author(id: 2) {\n    id\n    name\n    dateOfBirth\n    nationality\n    books {\n      id\n      title\n      publisher\n    }\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  author(id: Int!): Author!

  "requirements :\n     query : \nquery SearchforAuthor{\n  authorByName(name: \"J.K. Rowling\") {\n    id\n    name\n    dateOfBirth\n    nationality\n    books {\n      id\n      title\n      genre\n    }\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  authorByName(name: String!): Author!

  "requirements :\n     query : \nquery FetchAllTheUsers{\n  users {\n    id\n    username\n    email\n    role\n    profile {\n      id\n      firstname\n      lastname\n      phoneNumber\n      dateOfbirth\n    }\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  users: [User!]!

  "requirements :\n     query : \nquery FetchOneUserWithSpecifiedID{\n  user(id: 5) {\n    id\n    username\n    email\n    role\n    profile {\n      id\n      firstname\n      lastname\n      phoneNumber\n      dateOfbirth\n    }\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  user(id: Int!): User!
}

input BookFilterInput {
  language: Language
  genre: Genre
}

type Mutation {
  "requirements :\n     query : \nmutation CreateBook{\n  createBook(createBookInput: {\n    title: \"The Great Adventure\"\n    authorId : 2\n    translator: \"John Doe\"\n    edition: 2\n    publisher: \"ABC Publishing\"\n    language: Persian  \n    genre: Adventure   \n  }) {\n    id\n    title\n    translator\n    edition\n    publisher\n    language\n    genre\n    author {\n      id\n      name\n    }\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  createBook(createBookInput: CreateBookInput!): Book!

  "requirements :\n     query : \nmutation UpdateBook{\n  updateBook(updateBookInput: {\n    id: 3\n    title: \"The Greatest Adventure\"\n    translator: \"Jane Doe\"\n    edition: 3\n    publisher: \"XYZ Publishing\"\n    language: English\n    genre: Adventure\n  }) {\n    id\n    title\n    translator\n    edition\n    publisher\n    language\n    genre\n    author {\n  id\n  name\n}\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  updateBook(updateBookInput: UpdateBookInput!): Book!

  "requirements :\n     query : \nmutation DeleteBook{\n  removeBook(id: 1) {\n    id\n    title\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  removeBook(id: Int!): Book!

  "requirements :\n     query : \nmutation createAuthorMutation{\n  createAuthor(createAuthorInput: {\n    name: \"J.K. Rowling\"\n    dateOfBirth: \"1965-07-31T00:00:00.000Z\"\n    nationality: \"British\"\n  }) {\n    id\n    name\n    dateOfBirth\n    nationality\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  createAuthor(createAuthorInput: CreateAuthorInput!): Author!

  "requirements :\n     query : \nmutation UpdateAuthor{\n  updateAuthor(updateAuthorInput: {\n    id: 5\n    name: \"Joanne Rowling\"\n    nationality: \"UK\"\n  }) {\n    id\n    name\n    dateOfBirth\n    nationality\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  updateAuthor(updateAuthorInput: UpdateAuthorInput!): Author!

  "requirements :\n     query : \nmutation DeleteAuthor{\n  removeAuthor(id: 4) {\n    id\n    name\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  removeAuthor(id: Int!): Author!

  "requirements :\n     query : \nmutation CreateUser{\n  createUser(createUserInput: {\n    username: \"ali\"\n    email: \"ali@example.com\"\n    password: \"123456\"\n    role: Admin\n  }) {\n    id\n    username\n    email\n    role\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  createUser(createUserInput: CreateUserInput!): User!

  "requirements :\n     query : \nmutation UpdateUser{\n  updateUser(updateUserInput: {\n    id: 5\n    username: \"newAli\"\n    email: \"ali.new@example.com\"\n  }) {\n    id\n    username\n    email\n    role\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  updateUser(updateUserInput: UpdateUserInput!): User!

  "requirements :\n     query : \nmutation DeleteUser{\n  removeUser(id: 1) {\n    id\n    username\n    email\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  removeUser(id: Int!): User!

  "requirements :\n     query : \nmutation CreateProfileAndUser{\n  createUserWithProfile(\n    userInput: {\n      username: \"newUser\"\n      email: \"newuser@example.com\"\n      password: \"123456\"\n      role: Guest\n    }\n    profileInput: {\n      firstname: \"New\"\n      lastname: \"User\"\n      phoneNumber: \"123123123\"\n      dateOfbirth: \"2002-06-15T00:00:00.000Z\"\n    }\n  ) {\n    id\n    username\n    email\n    role\n    profile {\n      id\n      firstname\n      lastname\n      phoneNumber\n      dateOfbirth\n    }\n  }\n}\n    header : \n    x-user-role : Admin || User || Guest\n"
  createUserWithProfile(userInput: CreateUserInput!, profileInput: CreateProfileInput!): User!

  "requirements :\n     query : \nmutation CreateProfileWithExistingUser{\n  createProfile(\n    userId: 2\n    createProfileInput: {\n      firstname: \"Ali\"\n      lastname: \"Soltani\"\n      phoneNumber: \"123456789\"\n      dateOfbirth: \"2000-05-20T00:00:00.000Z\"\n    }\n  ) {\n    id\n    firstname\n    lastname\n    phoneNumber\n    dateOfbirth\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  createProfile(userId: Int!, createProfileInput: CreateProfileInput!): Profile!

  "requirements :\n     query : \nmutation UpdateProfile{\n  updateProfile(\n    profileId: 1\n    updateProfileInput: {\n      firstname: \"Updated\"\n      lastname: \"User\"\n      phoneNumber: \"987654321\"\n      dateOfbirth: \"2001-01-01T00:00:00.000Z\"\n    }\n  ) {\n    id\n    firstname\n    lastname\n    phoneNumber\n    dateOfbirth\n  }\n}\n\n    header : \n    x-user-role : Admin || User || Guest\n"
  updateProfile(profileId: Int!, updateProfileInput: CreateProfileInput!): Profile!

  """
  requirements :
       query : 
       mutation Login{
    login(loginInput: { 
      username: "ali", 
      password: "123456" 
    }) {
      id
      username
      email
    }
  }
  """
  login(loginInput: CreateAuthInput!): User!
}

input CreateBookInput {
  title: String!
  authorId: Int
  translator: String
  edition: Int!
  publisher: String!
  language: Language! = Persian
  genre: Genre! = Adventure
}

input UpdateBookInput {
  title: String
  authorId: Int
  translator: String
  edition: Int
  publisher: String
  language: Language = Persian
  genre: Genre = Adventure
  id: Int!
}

input CreateAuthorInput {
  name: String!
  dateOfBirth: DateTime!
  nationality: String
}

input UpdateAuthorInput {
  name: String
  dateOfBirth: DateTime
  nationality: String
  id: Int!
}

input CreateUserInput {
  username: String!
  role: Roles! = Guest
  email: String!
  password: String!
}

input UpdateUserInput {
  username: String
  role: Roles = Guest
  email: String
  password: String
  id: Int!
}

input CreateProfileInput {
  firstname: String!
  lastname: String!
  phoneNumber: String!
  dateOfbirth: DateTime!
}

input CreateAuthInput {
  username: String!
  password: String!
}